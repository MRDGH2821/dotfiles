{{- $email := promptStringOnce . "email" "Commit email address" "ask.mrdgh2821@outlook.com" -}}
{{- /* Ask Editor Choices */ -}}
{{- $editorchoices := list "code" "zed" -}}
{{- $editor := promptChoiceOnce . "editor" "Default Editor" $editorchoices "code" -}}
{{- /* KeePassXC DB validation with 3 attempts */ -}}
{{- $keepassxcdb := "" -}}
{{- $attempt := 0 -}}
{{- if not $keepassxcdb -}}
{{-   $keepassxcdb = promptStringOnce . "keepassxcdb" "KeepassXC DB Path" -}}
{{-   if not (stat $keepassxcdb) -}}
{{-     $keepassxcdb = promptStringOnce . "keepassxcdb" "KeepassXC DB Path (Attempt 2)" -}}
{{-     if not (stat $keepassxcdb) -}}
{{-       $keepassxcdb = promptStringOnce . "keepassxcdb" "KeepassXC DB Path (Final Attempt)" -}}
{{-       if not (stat $keepassxcdb) -}}
{{-         writeToStdout "Error: Failed to get valid KeePassXC database path after 3 attempts.\n" -}}
{{-         exit 1 -}}
{{-       end -}}
{{-     end -}}
{{-   end -}}
{{- end -}}
{{- /* pCloud folder validation with 3 attempts */ -}}
{{- $pcloudfolder := "" -}}
{{- if not $pcloudfolder -}}
{{-   $pcloudfolder = promptStringOnce . "pcloudfolder" "pCloud Local Folder Path" -}}
{{-   if not (stat $pcloudfolder) -}}
{{-     $pcloudfolder = promptStringOnce . "pcloudfolder" "pCloud Local Folder Path (Attempt 2)" -}}
{{-     if not (stat $pcloudfolder) -}}
{{-       $pcloudfolder = promptStringOnce . "pcloudfolder" "pCloud Local Folder Path (Final Attempt)" -}}
{{-       if not (stat $pcloudfolder) -}}
{{-         writeToStdout "Error: Failed to get valid pCloud folder path after 3 attempts.\n" -}}
{{-         exit 1 -}}
{{-       end -}}
{{-     end -}}
{{-   end -}}
{{- end -}}
{{/* Ask Device Type */}}
{{- $devicechoices := list "laptop" "tablet" -}}
{{- $devicetype := promptChoiceOnce . "devicetype" "Current device type" $devicechoices "laptop" -}}
{{/* Ask GPU Type */}}
{{- $gpu := "" -}}
{{- if eq .chezmoi.os "linux" -}}
{{-   $detected_gpu := output "bash" "-c" "lspci | grep -i 'vga\\|3d\\|2d'" | trim -}}
{{-   if contains "NVIDIA" $detected_gpu -}}
{{-     $gpu = "nvidia" -}}
{{-   else if contains "AMD" $detected_gpu -}}
{{-     $gpu = "amd" -}}
{{-   else -}}
{{-     $gpu = "none" -}}
{{-   end -}}
{{- else if eq .chezmoi.os "windows" -}}
{{-   $detected_gpu := output "powershell" "-NoProfile" "-NonInteractive" "-Command" "(Get-WmiObject Win32_VideoController).Name" | trim -}}
{{-   if contains "NVIDIA" $detected_gpu -}}
{{-     $gpu = "nvidia" -}}
{{-   else if contains "AMD" $detected_gpu -}}
{{-     $gpu = "amd" -}}
{{-   else -}}
{{-     $gpu = "none" -}}
{{-   end -}}
{{- end -}}
{{- $gpuchoices := list "nvidia" "amd" "none" -}}
{{- $gpu := promptChoiceOnce . "gpu" "GPU Vendor" $gpuchoices $gpu -}}
{{/* Detect OS Type */}}
{{- $osid := .chezmoi.os -}}
{{- if hasKey .chezmoi.osRelease "id" -}}
{{-   $osid = printf "%s-%s" .chezmoi.os .chezmoi.osRelease.id -}}
{{- end -}}
{{- if hasKey .chezmoi.osRelease "idLike" -}}
{{-   $osid = printf "%s-%s" .chezmoi.os .chezmoi.osRelease.idLike -}}
{{- end -}}
encryption = "gpg"
[data]
email = {{ $email | quote }}
username = "MRDGH2821"
profile = "personal"
osid = {{ $osid | quote }}
pcloudfolder = {{ $pcloudfolder | quote }}
devicetype = {{ $devicetype | quote }}
gpu = {{ $gpu | quote }}

[edit]
command = {{ $editor | quote }}
args = ["--wait"]

[keepassxc]
database = {{ $keepassxcdb | quote }}

[gpg]
recipient = "D30D1B600CF5CDEE9EC2D7DBDAD1E1E272A1FA73"

[hooks.read-source-state.pre]
{{- if eq .chezmoi.os "windows" }}
command = "powershell"
args = ["{{ .chezmoi.sourceDir }}/.chezmoiscripts/windows/.install-password-manager.ps1"]
{{ else }}
command = "{{ .chezmoi.sourceDir }}/.chezmoiscripts/linux/.install-password-manager.sh"
{{ end -}}
