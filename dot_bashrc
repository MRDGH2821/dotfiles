#!/usr/bin/env bash
### BASHRC START

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

# Source global definitions
if [[ -f /etc/bashrc ]]; then
  # shellcheck source=/dev/null
  . /etc/bashrc
fi

# User specific environment
if ! [[ ${PATH} =~ ${HOME}/.local/bin:${HOME}/bin: ]]; then
  PATH="${HOME}/.local/bin:${PATH}"
fi
export PATH

# Uncomment the following line if you don't like systemctl's auto-paging feature:
# export SYSTEMD_PAGER=

# Make less more friendly for non-text input files, see lesspipe(1)
# shellcheck disable=SC2312
[[ -x /usr/bin/lesspipe ]] && eval "$(SHELL=/bin/sh lesspipe)"

# User specific aliases and functions
if [[ -d ~/.bashrc.d ]]; then
  for rc in ~/.bashrc.d/*; do
    if [[ -f ${rc} ]]; then
      # shellcheck source=/dev/null
      . "${rc}"
    fi
  done
fi
unset rc

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [[ -f ~/.bash_aliases ]]; then
  # shellcheck source=/dev/null
  . ~/.bash_aliases
fi

# Bash prompt from Endeavour OS
# PS1='[\u@\h \W]\$ '

# Bash prompt from KDE Neon
# Set fancy prompt (non-color, unless we know we "want" color)
# shellcheck disable=SC2249 disable=SC2034
case "${TERM}" in
xterm-color | *-256color) color_prompt=yes ;;
esac

# Move shell invocations to ~/.bashrc.d/

if command -v mktemp >/dev/null 2>&1; then
  BASHRC_BEFORE="$(mktemp "${HOME}/.bashrc.d/50-new-XXXXXX")"
  BASHRC_AFTER="$(mktemp "${HOME}/.bashrc.d/50-new-XXXXXX")"
  BASHRC_TEMP="$(mktemp "${HOME}/.bashrc-XXXXXX")"

  # Add shebangs to the temporary files
  echo '#!/usr/bin/env bash' >"${BASHRC_BEFORE}"
  echo '#!/usr/bin/env bash' >"${BASHRC_AFTER}"

  BASHRC_MODE=before
  PREV_LINE=""
  SKIP_BEFORE=false
  while IFS= read -r LINE; do
    if [[ ${LINE} == '#!/usr/bin/env bash' ]] || [[ ${LINE} == '### BASHRC START' ]]; then
      # Check if shebang immediately precedes BASHRC START marker
      if [[ ${LINE} == '### BASHRC START' ]] && [[ ${PREV_LINE} == '#!/usr/bin/env bash' ]]; then
        SKIP_BEFORE=true
      fi
      BASHRC_MODE=bashrc
    elif [[ ${LINE} == '### BASHRC END' ]]; then
      BASHRC_MODE=after
      continue
    fi

    if [[ ${BASHRC_MODE} == 'before' ]] && [[ ${SKIP_BEFORE} == false ]]; then
      printf '%s\n' "${LINE}" >>"${BASHRC_BEFORE}"
    elif [[ ${BASHRC_MODE} == 'after' ]]; then
      printf '%s\n' "${LINE}" >>"${BASHRC_AFTER}"
    else
      printf '%s\n' "${LINE}" >>"${BASHRC_TEMP}"
    fi
    PREV_LINE="${LINE}"
  done <"${HOME}/.bashrc"

  # Add shebang to the generated file if it doesn't already have one
  if [[ $(head -1 "${BASHRC_TEMP}" || true) != '#!/usr/bin/env bash' ]]; then
    sed -i '1i#!/usr/bin/env bash' "${BASHRC_TEMP}"
  fi

  # this marker is never printed in the loop
  echo '### BASHRC END' >>"${BASHRC_TEMP}"
  mv "${BASHRC_TEMP}" "${HOME}/.bashrc"

  # Remove BASHRC_BEFORE if it only contains shebang or if skipped
  if [[ ${SKIP_BEFORE} == true ]] || [[ $(wc -l <"${BASHRC_BEFORE}" || true) -le 1 ]]; then
    rm "${BASHRC_BEFORE}"
    BASHRC_BEFORE=""
  fi

  if [[ -n ${BASHRC_BEFORE} && -s ${BASHRC_BEFORE} ]] || [[ -s ${BASHRC_AFTER} ]]; then
    echo "${HOME}/.bashrc has been modified. Check the following files for customizations:"
    [[ -n ${BASHRC_BEFORE} && -s ${BASHRC_BEFORE} ]] && echo "* ${BASHRC_BEFORE}"
    [[ -s ${BASHRC_AFTER} ]] && echo "* ${BASHRC_AFTER}"
  else
    [[ -n ${BASHRC_BEFORE} && ! -s ${BASHRC_BEFORE} ]] && rm "${BASHRC_BEFORE}"
    [[ ! -s ${BASHRC_AFTER} ]] && rm "${BASHRC_AFTER}"
  fi
  unset BASHRC_BEFORE BASHRC_AFTER BASHRC_TEMP BASHRC_MODE PREV_LINE SKIP_BEFORE
fi

# Zoxide

eval "$(fzf --bash)" || true

eval "$(zoxide init bash --cmd cd)" || true

### BASHRC END
